{"version":3,"sources":["app.js"],"names":["pagina","iniciarApp","console","log","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","async","mostrarServicios","resultado","fetch","db","json","servicios","servicio","id","nombre","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicios","onclick","seleccionarServicio","appendChild","error","elemento","tagName","parentElement","contains"],"mappings":"AACA,IAAAA,OAAA,EAQA,SAAAC,aACAC,QAAAC,IAAA,oBAGAC,iBAGAC,iBAEAC,kBAEAC,iBAGAC,mBAIA,SAAAJ,iBAGA,MAAAK,EAAAC,SAAAC,cAAA,oBACAF,GACAA,EAAAG,UAAAC,OAAA,mBAGAH,SAAAC,cAAA,SAAAX,QACAY,UAAAE,IAAA,mBAGA,MAAAC,EAAAL,SAAAC,cAAA,iBACAI,GACAA,EAAAH,UAAAC,OAAA,UAIAH,SAAAC,cAAA,eAAAX,YACAY,UAAAE,IAAA,UAIA,SAAAT,iBACAK,SAAAM,iBAAA,gBAGAC,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,IACAA,EAAAC,iBACArB,OAAAsB,SAAAF,EAAAG,OAAAC,QAAAC,MAGArB,iBACAI,uBASAkB,eAAAC,mBACA,IACA,MAAAC,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QACAC,UAAAA,GAAAF,EAGAE,EAAAf,QAAAgB,IACA,MAAAC,GAAAA,EAAAC,OAAAA,EAAAC,OAAAA,GAAAH,EAKAI,EAAA3B,SAAA4B,cAAA,KACAD,EAAAE,YAAAJ,EACAE,EAAAzB,UAAAE,IAAA,mBAGA0B,eAAA9B,SAAA4B,cAAA,KACAE,eAAAD,YAAA,KAAAH,EACAI,eAAA5B,UAAAE,IAAA,mBAGA,MAAA2B,EAAA/B,SAAA4B,cAAA,OACAG,EAAA7B,UAAAE,IAAA,YAGA2B,EAAAjB,QAAAkB,YAAAR,EAGAO,EAAAE,QAAAC,oBAGAH,EAAAI,YAAAR,GACAI,EAAAI,YAAAL,gBAMA9B,SAAAC,cAAA,cAAAkC,YAAAJ,KAWA,MAAAK,GACA5C,QAAAC,IAAA,YAMA,SAAAyC,oBAAAxB,GACA,IAAA2B,EAIAA,EADA,MAAA3B,EAAAG,OAAAyB,QACA5B,EAAAG,OAAA0B,cAEA7B,EAAAG,OAKAwB,EAAAnC,UAAAsC,SAAA,gBACAH,EAAAnC,UAAAC,OAAA,gBAEAkC,EAAAnC,UAAAE,IAAA,gBAOA,SAAAR,kBAEAI,SAAAC,cAAA,cACAQ,iBAAA,QAAA,KACAnB,SAGAQ,mBACAN,QAAAC,IAAAH,UAMA,SAAAO,iBACAG,SAAAC,cAAA,aACAQ,iBAAA,QAAA,KACAnB,SAEAQ,mBACAN,QAAAC,IAAAH,UAOA,SAAAQ,mBACA,MAAAF,EAAAI,SAAAC,cAAA,cACAJ,EAAAG,SAAAC,cAAA,aAEA,IAAAX,QACAO,EAAAK,UAAAE,IAAA,WACAR,EAAAM,UAAAC,OAAA,YACA,IAAAb,QACAM,EAAAM,UAAAE,IAAA,WACAP,EAAAK,UAAAC,OAAA,aAEAN,EAAAK,UAAAC,OAAA,WACAP,EAAAM,UAAAC,OAAA,YAIAT,iBA9LAM,SAAAS,iBAAA,oBAAA,WACAlB,aACA0B","file":"bundle.js","sourcesContent":["//variables globales.. disponible a todas las funciones\nlet pagina = 1;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    iniciarApp();\n    mostrarServicios();\n\n});\n// funcion que inicia la App\nfunction iniciarApp() {\n    console.log('iniciando App...');\n\n    // resalta el div actual segun el div que se presiona\n    mostrarSeccion();\n\n    // oculta o muestra una seccion segun el tab alq ue se presiona  \n    cambiarSeccion();\n\n    paginaSiguiente();\n\n    paginaAnterior();\n\n    //comprueba la pagina actual para ocultar o mostrar\n    botonesPaginador();\n}\n\n\nfunction mostrarSeccion() {\n\n    // eliminar mostrar-seccion de la seccion antetior\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\n    if (seccionAnterior) {\n        seccionAnterior.classList.remove('mostrar-seccion');\n    }\n\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\n    seccionActual.classList.add('mostrar-seccion');\n\n    //elimina la clase de actual en el tab anterior\n    const tabAnterior = document.querySelector('.tabs .actual');\n    if (tabAnterior) {\n        tabAnterior.classList.remove('actual');\n    }\n\n    //resalta el tab actual\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\n    tab.classList.add('actual');\n\n}\n//funcion para seleccionar un tabs \nfunction cambiarSeccion() {\n    const enlaces = document.querySelectorAll('.tabs button');\n\n    //itera cada elemento de enlaces\n    enlaces.forEach(enlace => {\n        enlace.addEventListener('click', e => {\n            e.preventDefault();\n            pagina = parseInt(e.target.dataset.paso);\n\n            //llamar la funcion de llamar seccion\n            mostrarSeccion();\n            botonesPaginador();\n        })\n    })\n\n\n}\n\n\n//funcion asincrona para consultas de datos de un archivo JSON\nasync function mostrarServicios() {\n    try {\n        const resultado = await fetch('./servicios.json');\n        const db = await resultado.json();\n        const { servicios } = db; // ==> Destructuring\n\n        //generar el HTML\n        servicios.forEach(servicio => {\n            const { id, nombre, precio } = servicio;\n\n            //DOM Scripting\n\n            // generar nombre de servicio\n            const nombreServicio = document.createElement('P'); // crea un parrafo para cada id\n            nombreServicio.textContent = nombre;\n            nombreServicio.classList.add('nombre-servicio');\n\n            // Generar el precio del servicio\n            precioServicio = document.createElement('P'); // crea un parrafo para cada precio de los id\n            precioServicio.textContent = `$ ${precio}`;\n            precioServicio.classList.add('precio-servicio');\n\n            // Generar Div contenedor de servicios\n            const servicioDiv = document.createElement('DIV'); // se crea un DIV\n            servicioDiv.classList.add('servicio'); // se le agrega la clase servicio\n\n            // leer el dataset id y agregarlo en el servicioDiv\n            servicioDiv.dataset.idServicios = id;\n\n            //funcion para seleccionar el div con onclick\n            servicioDiv.onclick = seleccionarServicio;\n\n            // Inyectar precio  y nombre junto al div de servicio\n            servicioDiv.appendChild(nombreServicio); // se le pone como higjo nombreServicio\n            servicioDiv.appendChild(precioServicio);\n\n\n\n\n            // Inyectarlo en el HTML\n            document.querySelector('#servicios').appendChild(servicioDiv); // appendchild para inyectar al HTML\n\n\n            //debugging\n            // console.log(nombreServicio);\n            // console.log(precioServicio);\n\n\n        });\n\n\n    } catch (error) {\n        console.log('error..');\n\n    }\n}\n\n// seleccionar servicios\nfunction seleccionarServicio(e) {\n    let elemento;\n\n    // forzar a el elemento seleccionado para que tenga como tagName el div\n    if (e.target.tagName === \"P\") {\n        elemento = e.target.parentElement;\n    } else {\n        elemento = e.target;\n    }\n\n    //agregar la clase seleccionado\n\n    if (elemento.classList.contains('seleccionado')) {\n        elemento.classList.remove('seleccionado');\n    } else {\n        elemento.classList.add('seleccionado');\n    }\n\n\n}\n\n// paginadores\nfunction paginaSiguiente() {\n\n    const paginaSiguiente = document.querySelector('#siguiente');\n    paginaSiguiente.addEventListener('click', () => {\n        pagina++;\n\n\n        botonesPaginador();\n        console.log(pagina);\n\n    })\n\n}\n\nfunction paginaAnterior() {\n    const paginaAnterior = document.querySelector('#anterior');\n    paginaAnterior.addEventListener('click', () => {\n        pagina--;\n\n        botonesPaginador();\n        console.log(pagina);\n\n    })\n\n}\n\n//comprobador de pagina actual\nfunction botonesPaginador() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    const paginaAnterior = document.querySelector('#anterior');\n\n    if (pagina === 1) {\n        paginaAnterior.classList.add('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n    } else if (pagina === 3) {\n        paginaSiguiente.classList.add('ocultar');\n        paginaAnterior.classList.remove('ocultar');\n    } else {\n        paginaAnterior.classList.remove('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n\n    }\n\n    mostrarSeccion();\n}"]}