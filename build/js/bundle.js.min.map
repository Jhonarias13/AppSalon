{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","celular","fecha","hora","servicios","iniciarApp","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","nombreCita","numeroTelefono","fechaCita","deshabilitarFechaAnterior","horaCita","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","async","mostrarServicios","resultado","fetch","db","json","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicios","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains","eliminarServicio","agregarServicio","firstElementChild","nextElementSibling","filter","servicioObj","resumenDiv","firstChild","removeChild","Object","values","includes","noServicios","nombreTexto","value","trim","length","mostrarAlerta","alerta","telefono","mensaje","tipo","setTimeout","fechaInput","dia","Date","getUTCDay","inputFecha","fechaAhora","year","getFullYear","mes","getMonth","getDate","mesMenor","fechaDeshabilitar","min","inputHora","split","focus","campoHora","horatexto"],"mappings":"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","file":"bundle.js","sourcesContent":["//variables globales.. disponible a todas las funciones\nlet pagina = 1;\n\nconst cita = {\n    nombre: '',\n    celular: '',\n    fecha: '',\n    hora: '',\n    servicios: []\n}\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    iniciarApp();\n    mostrarServicios();\n\n});\n// funcion que inicia la App\nfunction iniciarApp() {\n    // console.log('iniciando App...');\n\n    // resalta el div actual segun el div que se presiona\n    mostrarSeccion();\n\n    // oculta o muestra una seccion segun el tab alq ue se presiona  \n    cambiarSeccion();\n\n    paginaSiguiente();\n\n    paginaAnterior();\n\n    //comprueba la pagina actual para ocultar o mostrar\n    botonesPaginador();\n\n    // muestra el resumen de la cita o mensaje de error en caso de no pasar la validacion\n    mostrarResumen();\n\n\n    // funcion para almacenar el nombre de la cita en el objeto\n    nombreCita();\n\n    //funcion para almacenar el numero del telefono\n    numeroTelefono();\n\n    // almacena la fecha en la cita del objeto\n    fechaCita();\n\n    // deshabilita dias pasados\n    deshabilitarFechaAnterior();\n\n    // almacena la hora de la cita en el objecto\n    horaCita();\n}\n\n\nfunction mostrarSeccion() {\n\n    // eliminar mostrar-seccion de la seccion antetior\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\n    if (seccionAnterior) {\n        seccionAnterior.classList.remove('mostrar-seccion');\n    }\n\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\n    seccionActual.classList.add('mostrar-seccion');\n\n    //elimina la clase de actual en el tab anterior\n    const tabAnterior = document.querySelector('.tabs .actual');\n    if (tabAnterior) {\n        tabAnterior.classList.remove('actual');\n    }\n\n    //resalta el tab actual\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\n    tab.classList.add('actual');\n\n}\n//funcion para seleccionar un tabs \nfunction cambiarSeccion() {\n    const enlaces = document.querySelectorAll('.tabs button');\n\n    //itera cada elemento de enlaces\n    enlaces.forEach(enlace => {\n        enlace.addEventListener('click', e => {\n            e.preventDefault();\n            pagina = parseInt(e.target.dataset.paso);\n\n            //llamar la funcion de llamar seccion\n            mostrarSeccion();\n            botonesPaginador();\n        })\n    })\n\n\n}\n\n\n//funcion asincrona para consultas de datos de un archivo JSON\nasync function mostrarServicios() {\n    try {\n        const resultado = await fetch('./servicios.json');\n        const db = await resultado.json();\n        const { servicios } = db; // ==> Destructuring\n\n        //generar el HTML\n        servicios.forEach(servicio => {\n            const { id, nombre, precio } = servicio;\n\n            //DOM Scripting\n\n            // generar nombre de servicio\n            const nombreServicio = document.createElement('P'); // crea un parrafo para cada id\n            nombreServicio.textContent = nombre;\n            nombreServicio.classList.add('nombre-servicio');\n\n            // Generar el precio del servicio\n            precioServicio = document.createElement('P'); // crea un parrafo para cada precio de los id\n            precioServicio.textContent = `$ ${precio}`;\n            precioServicio.classList.add('precio-servicio');\n\n            // Generar Div contenedor de servicios\n            const servicioDiv = document.createElement('DIV'); // se crea un DIV\n            servicioDiv.classList.add('servicio'); // se le agrega la clase servicio\n\n            // leer el dataset id y agregarlo en el servicioDiv\n            servicioDiv.dataset.idServicios = id;\n\n            //funcion para seleccionar el div con onclick\n            servicioDiv.onclick = seleccionarServicio;\n\n            // Inyectar precio  y nombre junto al div de servicio\n            servicioDiv.appendChild(nombreServicio); // se le pone como higjo nombreServicio\n            servicioDiv.appendChild(precioServicio);\n\n\n\n\n            // Inyectarlo en el HTML\n            document.querySelector('#servicios').appendChild(servicioDiv); // appendchild para inyectar al HTML\n\n\n            //debugging\n            // console.log(nombreServicio);\n            // console.log(precioServicio);\n\n\n        });\n\n\n    } catch (error) {\n        console.log('error..');\n\n    }\n}\n\n// seleccionar servicios\nfunction seleccionarServicio(e) {\n    let elemento;\n\n    // forzar a el elemento seleccionado para que tenga como tagName el div\n    if (e.target.tagName === \"P\") {\n        elemento = e.target.parentElement;\n    } else {\n        elemento = e.target;\n    }\n\n    //agregar la clase seleccionado\n\n    if (elemento.classList.contains('seleccionado')) {\n        elemento.classList.remove('seleccionado');\n\n\n        const id = parseInt(elemento.dataset.idServicios);\n        // console.log(id);\n\n\n        eliminarServicio(id);\n    } else {\n        elemento.classList.add('seleccionado');\n\n        const servicioObj = {\n                id: parseInt(elemento.dataset.idServicios),\n                nombre: elemento.firstElementChild.textContent,\n                precio: elemento.firstElementChild.nextElementSibling.textContent\n            }\n            // console.log(servicioObj);\n\n        agregarServicio(servicioObj);\n    }\n}\n// funcion para eliminar servicios del objeto\nfunction eliminarServicio(id) {\n    const { servicios } = cita;\n    //con la funcion .filter() se trae los id que no estan\n    cita.servicios = servicios.filter(servicio => servicio.id != id);\n    // console.log(cita);\n}\n// funcion para agregar los servicios al objeto\nfunction agregarServicio(servicioObj) {\n    // console.log('agregando...');\n    const { servicios } = cita;\n    cita.servicios = [...servicios, servicioObj]; //forma de copiar un arreglo\n    console.log(cita);\n\n\n}\n\n\n// paginadores\nfunction paginaSiguiente() {\n\n    const paginaSiguiente = document.querySelector('#siguiente');\n    paginaSiguiente.addEventListener('click', () => {\n        pagina++;\n\n\n        botonesPaginador();\n        // console.log(pagina);\n\n    })\n\n}\n\nfunction paginaAnterior() {\n    const paginaAnterior = document.querySelector('#anterior');\n    paginaAnterior.addEventListener('click', () => {\n        pagina--;\n\n        botonesPaginador();\n        // console.log(pagina);\n\n    })\n\n}\n\n//comprobador de pagina actual\nfunction botonesPaginador() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    const paginaAnterior = document.querySelector('#anterior');\n\n    if (pagina === 1) {\n        paginaAnterior.classList.add('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n    } else if (pagina === 3) {\n        paginaSiguiente.classList.add('ocultar');\n        paginaAnterior.classList.remove('ocultar');\n\n\n        mostrarResumen(); //estamos en la pagina 3, carga el resumen de la cita\n    } else {\n        paginaAnterior.classList.remove('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n\n    }\n\n    mostrarSeccion();\n}\n\nfunction mostrarResumen() {\n    // destructuring\n    const { nombre, celular, fecha, hora, servicios } = cita;\n\n    // seleccionar resumen \n    // document.querySelector('#paso-3').classList.add('contenido-resumen');\n    const resumenDiv = document.querySelector('.contenido-resumen');\n\n\n    //limpia el HTML previo\n    while (resumenDiv.firstChild) {\n        resumenDiv.removeChild(resumenDiv.firstChild);\n    }\n    // validacion del objeto\n    if (Object.values(cita).includes('')) {\n        const noServicios = document.createElement('P');\n        noServicios.textContent = '¡Faltan datos para agendar tu cita!';\n        noServicios.classList.add('invalidar-cita');\n        //agregar a resumenDiv\n        resumenDiv.appendChild(noServicios);\n        return;\n    }\n    // mostrar resumen\n    console.log('todo bien');\n\n    const nombreCita = document.createElement('P');\n    nombreCita.textContent = `<span>Nombre: ${nombre}</span>`\n}\n// funcion pra obtener el nombre del input del formulario\nfunction nombreCita() {\n    const nombreInput = document.querySelector('#nombre');\n\n    nombreInput.addEventListener('input', (e) => {\n        nombreTexto = e.target.value.trim(); // trim() elimina espacio en blanco al final y al comienzo del input\n\n        // validacion para que nombretexto tenga algo\n\n        if (nombreTexto === '' || nombreTexto.length <= 3) {\n            mostrarAlerta('¡Nombre NO Válido!', 'error');\n\n        } else {\n            const alerta = document.querySelector('.alerta');\n            if (alerta) {\n                alerta.remove();\n            }\n            cita.nombre = nombreTexto;\n            // console.log('nombre valido');\n            console.log(cita);\n        }\n    });\n}\n\nfunction numeroTelefono() {\n    const numero = document.querySelector('#celular');\n\n    numero.addEventListener('input', (e) => {\n        const telefono = e.target.value.trim();\n\n        if (telefono.length < 10) {\n            mostrarAlerta('numero invalido', 'error');\n\n        } else {\n            const alerta = document.querySelector('.alerta');\n            if (alerta) {\n                alerta.remove();\n            }\n            // console.log('numero valido');\n            cita.celular = telefono;\n            console.log(cita);\n        }\n    })\n}\n\nfunction mostrarAlerta(mensaje, tipo) {\n\n    // si hay una alerta previa, no mostrar otra\n    const alertaPrevia = document.querySelector('.alerta');\n    if (alertaPrevia) {\n        return;\n    }\n    // console.log('el mensaje es', mensaje);\n\n    // crear alerta en html \n    const alerta = document.createElement('DIV');\n    alerta.textContent = mensaje;\n    alerta.classList.add('alerta');\n\n    // si la alerta es de tipo error, entonces, agrega una segunda clase llamada error\n    if (tipo === 'error') {\n        alerta.classList.add('error');\n    }\n    console.log(alerta);\n\n    //. insertar en el html \n\n    const formulario = document.querySelector('.formulario');\n    formulario.appendChild(alerta);\n\n    // eliminar la alerta despues de 3sg\n\n    setTimeout(() => {\n        alerta.remove();\n    }, 3000);\n\n\n}\n\n\nfunction fechaCita() {\n    const fechaInput = document.querySelector('#fecha');\n    fechaInput.addEventListener('input', e => {\n        // console.log(e.target.value);\n\n        const dia = new Date(e.target.value).getUTCDay(); // getUTCDay retorna los dias de la semana como numero del 0 - 6\n        // console.log(dia);\n\n        // if para deshabilitar los domingos \n        if ([0].includes(dia)) {\n            e.preventDefault();\n            fechaInput.value = '';\n            mostrarAlerta('No hay servicio los domingos', 'error');\n        } else {\n            cita.fecha = fechaInput.value;\n            console.log(cita);\n\n        }\n    })\n}\n\nfunction deshabilitarFechaAnterior() {\n    const inputFecha = document.querySelector('#fecha');\n\n    const fechaAhora = new Date();\n    const year = fechaAhora.getFullYear();\n    const mes = fechaAhora.getMonth() + 1;\n    const dia = fechaAhora.getDate();\n\n    // agrega un cero si el mes es menor al mes 10\n    if (mes < 10) {\n        mesMenor = `0${mes}`;\n        const fechaDeshabilitar = `${year}-${mesMenor}-${dia}`;\n        inputFecha.min = fechaDeshabilitar;\n    } else {\n        fechaDeshabilitar = `${year}-${mes}-${dia}`;\n        inputFecha.min = fechaDeshabilitar;\n    }\n}\n\nfunction horaCita() {\n    const inputHora = document.querySelector('#hora');\n\n\n    inputHora.addEventListener('input', e => {\n\n\n        const horaCita = e.target.value\n        const hora = horaCita.split(':');\n\n        if (hora[0] >= 8 && hora[0] <= 19) {\n            cita.hora = horaCita;\n            console.log(cita);\n\n        } else {\n            // vaciar la casilla de la hora\n            inputHora.classList.add('hora-invalida');\n            inputHora.focus();\n            inputHora.value = '';\n\n            //agregar texto debajo dej input de hora\n            const campoHora = document.querySelector('.formulario');\n            horatexto = document.createElement('P');\n            horatexto.textContent = \"hora invalida, intente entre las 8:00 AM y las 7:00 PM\";\n            campoHora.appendChild(horatexto);\n\n            setTimeout(() => {\n                horatexto.remove();\n                inputHora.classList.remove('hora-invalida');\n            }, 4000)\n\n        }\n\n    })\n\n}"]}